version: "3"
networks:
  backend:
    driver: bridge

services:
  mysql:
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    container_name: mysql
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${TIMEZONE}
    volumes:
      - ${MYSQL_HOST_DATA_PATH}:${MYSQL_CONTAINER_DATA_PATH}
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend

  redis:
    build: ./redis
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis/log/redis.log:/var/log/redis/redis-server.log
      - ${REDIS_HOST_DATA_PATH}:${REDIS_CONTAINER_DATA_PATH}
    networks: 
      - backend

  php-fpm:
    build:
      context: ./php
      args:
        - PHP_VERSION=${PHP_VERSION}
        - INSTALL_XDEBUG=${PHP_INSTALL_XDEBUG}
        - INSTALL_REDIS=${PHP_INSTALL_REDIS}
        - INSTALL_JIEBA=${PHP_INSTALL_JIEBA}
        - INSTALL_SWOOLE=${PHP_INSTALL_SWOOLE}
        - INSTALL_PYTHON2=${PHP_INSTALL_PYTHON2}
        - INSTALL_PYTHON3=${PHP_INSTALL_PYTHON3}
        - INSTALL_PYTHON_PACK=${PHP_INSTALL_PYTHON_PACK}
    container_name: php-fpm
    working_dir: ${CONTAINER_PROJECT_PATH}
    ports:
      - "9000:9000"
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    links:
      - "mysql"
      - "redis"
    volumes:
      - ./php/php.ini:/usr/local/etc/php/php.ini
      - ./php/log/php-fpm.log:/var/log/php-fpm.log
      - ${HOST_PROJECT_PATH}:${CONTAINER_PROJECT_PATH}
    networks: 
      - backend

  nginx:
    build: ./nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    links:
      - "php-fpm"
    depends_on:
      - "php-fpm"
    volumes:
      - ${HOST_PROJECT_PATH}:${CONTAINER_PROJECT_PATH}
      - ./nginx/site-enabled/:/etc/nginx/conf.d/
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl/:/etc/nginx/ssl/
      - ./nginx/log/:/nginx/log
    networks: 
      - backend

  workspace:
    build:
      context: ./workspace
      args:
        - PHP_VERSION=${PHP_VERSION}
        - INSTALL_GIT=${WORKSPACE_INSTALL_GIT}
        - INSTALL_VIM=${WORKSPACE_INSTALL_VIM}
        - INSTALL_NETTOOLS=${WORKSPACE_INSTALL_NETTOOLS}
        - INSTALL_COMPOSER=${WORKSPACE_INSTALL_COMPOSER}
        - INSTALL_NODE=${WORKSPACE_INSTALL_NODE}
        - INSTALL_PS_WATCHER=${WORKSPACE_INSTALL_PS_WATCHER}
        - INSTALL_JDK=${WORKSPACE_INSTALL_JDK}
        - INSTALL_MONGO=${WORKSPACE_INSTALL_MONGO}
    container_name: workspace
    working_dir: ${CONTAINER_PROJECT_PATH}
    ports:
      - "8081:8081"
      - "8888:8888"
    volumes:
      - ./php/php.ini:/usr/local/etc/php/php.ini
      - ${HOST_PROJECT_PATH}:${CONTAINER_PROJECT_PATH}
    tty: true
    links:
      - mysql
      - redis
    networks:
      - backend

  phpunit:
    build:
      context: ./phpunit
      args:
        - PHP_VERSION=${PHP_VERSION}
    container_name: phpunit
    volumes:
      - ./php/php.ini:/usr/local/etc/php/php.ini
      - /develop:/develop
    tty: true
    links:
      - mysql
      - redis
    networks:
      - backend
